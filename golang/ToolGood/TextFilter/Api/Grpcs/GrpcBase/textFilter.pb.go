// Code generated by protoc-gen-go. DO NOT EDIT.
// source: textFilter.proto

package GrpcBase

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TextFindAllGrpcRequest struct {
	Txt                  string   `protobuf:"bytes,1,opt,name=txt,proto3" json:"txt,omitempty"`
	SkipBidi             bool     `protobuf:"varint,2,opt,name=skipBidi,proto3" json:"skipBidi,omitempty"`
	OnlyPosition         bool     `protobuf:"varint,3,opt,name=onlyPosition,proto3" json:"onlyPosition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextFindAllGrpcRequest) Reset()         { *m = TextFindAllGrpcRequest{} }
func (m *TextFindAllGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*TextFindAllGrpcRequest) ProtoMessage()    {}
func (*TextFindAllGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{0}
}

func (m *TextFindAllGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFindAllGrpcRequest.Unmarshal(m, b)
}
func (m *TextFindAllGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFindAllGrpcRequest.Marshal(b, m, deterministic)
}
func (m *TextFindAllGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFindAllGrpcRequest.Merge(m, src)
}
func (m *TextFindAllGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_TextFindAllGrpcRequest.Size(m)
}
func (m *TextFindAllGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFindAllGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextFindAllGrpcRequest proto.InternalMessageInfo

func (m *TextFindAllGrpcRequest) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

func (m *TextFindAllGrpcRequest) GetSkipBidi() bool {
	if m != nil {
		return m.SkipBidi
	}
	return false
}

func (m *TextFindAllGrpcRequest) GetOnlyPosition() bool {
	if m != nil {
		return m.OnlyPosition
	}
	return false
}

type TextFindAllAsyncGrpcRequest struct {
	Txt                  string   `protobuf:"bytes,1,opt,name=txt,proto3" json:"txt,omitempty"`
	SkipBidi             bool     `protobuf:"varint,2,opt,name=skipBidi,proto3" json:"skipBidi,omitempty"`
	OnlyPosition         bool     `protobuf:"varint,3,opt,name=onlyPosition,proto3" json:"onlyPosition,omitempty"`
	RequestId            string   `protobuf:"bytes,4,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextFindAllAsyncGrpcRequest) Reset()         { *m = TextFindAllAsyncGrpcRequest{} }
func (m *TextFindAllAsyncGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*TextFindAllAsyncGrpcRequest) ProtoMessage()    {}
func (*TextFindAllAsyncGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{1}
}

func (m *TextFindAllAsyncGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFindAllAsyncGrpcRequest.Unmarshal(m, b)
}
func (m *TextFindAllAsyncGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFindAllAsyncGrpcRequest.Marshal(b, m, deterministic)
}
func (m *TextFindAllAsyncGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFindAllAsyncGrpcRequest.Merge(m, src)
}
func (m *TextFindAllAsyncGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_TextFindAllAsyncGrpcRequest.Size(m)
}
func (m *TextFindAllAsyncGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFindAllAsyncGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextFindAllAsyncGrpcRequest proto.InternalMessageInfo

func (m *TextFindAllAsyncGrpcRequest) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

func (m *TextFindAllAsyncGrpcRequest) GetSkipBidi() bool {
	if m != nil {
		return m.SkipBidi
	}
	return false
}

func (m *TextFindAllAsyncGrpcRequest) GetOnlyPosition() bool {
	if m != nil {
		return m.OnlyPosition
	}
	return false
}

func (m *TextFindAllAsyncGrpcRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TextFindAllAsyncGrpcRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type TextReplaceGrpcRequest struct {
	Txt                  string   `protobuf:"bytes,1,opt,name=txt,proto3" json:"txt,omitempty"`
	SkipBidi             bool     `protobuf:"varint,2,opt,name=skipBidi,proto3" json:"skipBidi,omitempty"`
	ReplaceChar          uint32   `protobuf:"varint,3,opt,name=replaceChar,proto3" json:"replaceChar,omitempty"`
	ReviewReplace        bool     `protobuf:"varint,4,opt,name=reviewReplace,proto3" json:"reviewReplace,omitempty"`
	ContactReplace       bool     `protobuf:"varint,5,opt,name=contactReplace,proto3" json:"contactReplace,omitempty"`
	OnlyPosition         bool     `protobuf:"varint,6,opt,name=onlyPosition,proto3" json:"onlyPosition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextReplaceGrpcRequest) Reset()         { *m = TextReplaceGrpcRequest{} }
func (m *TextReplaceGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*TextReplaceGrpcRequest) ProtoMessage()    {}
func (*TextReplaceGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{2}
}

func (m *TextReplaceGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextReplaceGrpcRequest.Unmarshal(m, b)
}
func (m *TextReplaceGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextReplaceGrpcRequest.Marshal(b, m, deterministic)
}
func (m *TextReplaceGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextReplaceGrpcRequest.Merge(m, src)
}
func (m *TextReplaceGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_TextReplaceGrpcRequest.Size(m)
}
func (m *TextReplaceGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextReplaceGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextReplaceGrpcRequest proto.InternalMessageInfo

func (m *TextReplaceGrpcRequest) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

func (m *TextReplaceGrpcRequest) GetSkipBidi() bool {
	if m != nil {
		return m.SkipBidi
	}
	return false
}

func (m *TextReplaceGrpcRequest) GetReplaceChar() uint32 {
	if m != nil {
		return m.ReplaceChar
	}
	return 0
}

func (m *TextReplaceGrpcRequest) GetReviewReplace() bool {
	if m != nil {
		return m.ReviewReplace
	}
	return false
}

func (m *TextReplaceGrpcRequest) GetContactReplace() bool {
	if m != nil {
		return m.ContactReplace
	}
	return false
}

func (m *TextReplaceGrpcRequest) GetOnlyPosition() bool {
	if m != nil {
		return m.OnlyPosition
	}
	return false
}

type TextReplaceAsyncGrpcRequest struct {
	Txt                  string   `protobuf:"bytes,1,opt,name=txt,proto3" json:"txt,omitempty"`
	SkipBidi             bool     `protobuf:"varint,2,opt,name=skipBidi,proto3" json:"skipBidi,omitempty"`
	ReplaceChar          uint32   `protobuf:"varint,3,opt,name=replaceChar,proto3" json:"replaceChar,omitempty"`
	ReviewReplace        bool     `protobuf:"varint,4,opt,name=reviewReplace,proto3" json:"reviewReplace,omitempty"`
	ContactReplace       bool     `protobuf:"varint,5,opt,name=contactReplace,proto3" json:"contactReplace,omitempty"`
	OnlyPosition         bool     `protobuf:"varint,6,opt,name=onlyPosition,proto3" json:"onlyPosition,omitempty"`
	RequestId            string   `protobuf:"bytes,7,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextReplaceAsyncGrpcRequest) Reset()         { *m = TextReplaceAsyncGrpcRequest{} }
func (m *TextReplaceAsyncGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*TextReplaceAsyncGrpcRequest) ProtoMessage()    {}
func (*TextReplaceAsyncGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{3}
}

func (m *TextReplaceAsyncGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextReplaceAsyncGrpcRequest.Unmarshal(m, b)
}
func (m *TextReplaceAsyncGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextReplaceAsyncGrpcRequest.Marshal(b, m, deterministic)
}
func (m *TextReplaceAsyncGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextReplaceAsyncGrpcRequest.Merge(m, src)
}
func (m *TextReplaceAsyncGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_TextReplaceAsyncGrpcRequest.Size(m)
}
func (m *TextReplaceAsyncGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TextReplaceAsyncGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TextReplaceAsyncGrpcRequest proto.InternalMessageInfo

func (m *TextReplaceAsyncGrpcRequest) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

func (m *TextReplaceAsyncGrpcRequest) GetSkipBidi() bool {
	if m != nil {
		return m.SkipBidi
	}
	return false
}

func (m *TextReplaceAsyncGrpcRequest) GetReplaceChar() uint32 {
	if m != nil {
		return m.ReplaceChar
	}
	return 0
}

func (m *TextReplaceAsyncGrpcRequest) GetReviewReplace() bool {
	if m != nil {
		return m.ReviewReplace
	}
	return false
}

func (m *TextReplaceAsyncGrpcRequest) GetContactReplace() bool {
	if m != nil {
		return m.ContactReplace
	}
	return false
}

func (m *TextReplaceAsyncGrpcRequest) GetOnlyPosition() bool {
	if m != nil {
		return m.OnlyPosition
	}
	return false
}

func (m *TextReplaceAsyncGrpcRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TextReplaceAsyncGrpcRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type TextFilterRequestIdGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextFilterRequestIdGrpcReply) Reset()         { *m = TextFilterRequestIdGrpcReply{} }
func (m *TextFilterRequestIdGrpcReply) String() string { return proto.CompactTextString(m) }
func (*TextFilterRequestIdGrpcReply) ProtoMessage()    {}
func (*TextFilterRequestIdGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{4}
}

func (m *TextFilterRequestIdGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFilterRequestIdGrpcReply.Unmarshal(m, b)
}
func (m *TextFilterRequestIdGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFilterRequestIdGrpcReply.Marshal(b, m, deterministic)
}
func (m *TextFilterRequestIdGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFilterRequestIdGrpcReply.Merge(m, src)
}
func (m *TextFilterRequestIdGrpcReply) XXX_Size() int {
	return xxx_messageInfo_TextFilterRequestIdGrpcReply.Size(m)
}
func (m *TextFilterRequestIdGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFilterRequestIdGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_TextFilterRequestIdGrpcReply proto.InternalMessageInfo

func (m *TextFilterRequestIdGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TextFilterRequestIdGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TextFilterRequestIdGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type TextFindAllGrpcReply struct {
	Code                 int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string                         `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RiskLevel            string                         `protobuf:"bytes,4,opt,name=riskLevel,proto3" json:"riskLevel,omitempty"`
	RiskCode             string                         `protobuf:"bytes,5,opt,name=riskCode,proto3" json:"riskCode,omitempty"`
	SentimentScore       float32                        `protobuf:"fixed32,6,opt,name=sentimentScore,proto3" json:"sentimentScore,omitempty"`
	Details              []*TextFilterDetailGrpcResult  `protobuf:"bytes,7,rep,name=details,proto3" json:"details,omitempty"`
	Contacts             []*TextFilterContactGrpcResult `protobuf:"bytes,8,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TextFindAllGrpcReply) Reset()         { *m = TextFindAllGrpcReply{} }
func (m *TextFindAllGrpcReply) String() string { return proto.CompactTextString(m) }
func (*TextFindAllGrpcReply) ProtoMessage()    {}
func (*TextFindAllGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{5}
}

func (m *TextFindAllGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFindAllGrpcReply.Unmarshal(m, b)
}
func (m *TextFindAllGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFindAllGrpcReply.Marshal(b, m, deterministic)
}
func (m *TextFindAllGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFindAllGrpcReply.Merge(m, src)
}
func (m *TextFindAllGrpcReply) XXX_Size() int {
	return xxx_messageInfo_TextFindAllGrpcReply.Size(m)
}
func (m *TextFindAllGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFindAllGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_TextFindAllGrpcReply proto.InternalMessageInfo

func (m *TextFindAllGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TextFindAllGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TextFindAllGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TextFindAllGrpcReply) GetRiskLevel() string {
	if m != nil {
		return m.RiskLevel
	}
	return ""
}

func (m *TextFindAllGrpcReply) GetRiskCode() string {
	if m != nil {
		return m.RiskCode
	}
	return ""
}

func (m *TextFindAllGrpcReply) GetSentimentScore() float32 {
	if m != nil {
		return m.SentimentScore
	}
	return 0
}

func (m *TextFindAllGrpcReply) GetDetails() []*TextFilterDetailGrpcResult {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TextFindAllGrpcReply) GetContacts() []*TextFilterContactGrpcResult {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type TextReplaceGrpcReply struct {
	Code                 int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string                        `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RiskLevel            string                        `protobuf:"bytes,4,opt,name=riskLevel,proto3" json:"riskLevel,omitempty"`
	ResultText           string                        `protobuf:"bytes,5,opt,name=resultText,proto3" json:"resultText,omitempty"`
	Details              []*TextFilterDetailGrpcResult `protobuf:"bytes,6,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TextReplaceGrpcReply) Reset()         { *m = TextReplaceGrpcReply{} }
func (m *TextReplaceGrpcReply) String() string { return proto.CompactTextString(m) }
func (*TextReplaceGrpcReply) ProtoMessage()    {}
func (*TextReplaceGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{6}
}

func (m *TextReplaceGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextReplaceGrpcReply.Unmarshal(m, b)
}
func (m *TextReplaceGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextReplaceGrpcReply.Marshal(b, m, deterministic)
}
func (m *TextReplaceGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextReplaceGrpcReply.Merge(m, src)
}
func (m *TextReplaceGrpcReply) XXX_Size() int {
	return xxx_messageInfo_TextReplaceGrpcReply.Size(m)
}
func (m *TextReplaceGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TextReplaceGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_TextReplaceGrpcReply proto.InternalMessageInfo

func (m *TextReplaceGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TextReplaceGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TextReplaceGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TextReplaceGrpcReply) GetRiskLevel() string {
	if m != nil {
		return m.RiskLevel
	}
	return ""
}

func (m *TextReplaceGrpcReply) GetResultText() string {
	if m != nil {
		return m.ResultText
	}
	return ""
}

func (m *TextReplaceGrpcReply) GetDetails() []*TextFilterDetailGrpcResult {
	if m != nil {
		return m.Details
	}
	return nil
}

type TextFilterDetailGrpcResult struct {
	RiskLevel            string   `protobuf:"bytes,1,opt,name=riskLevel,proto3" json:"riskLevel,omitempty"`
	RiskCode             string   `protobuf:"bytes,2,opt,name=riskCode,proto3" json:"riskCode,omitempty"`
	Position             string   `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Text                 string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextFilterDetailGrpcResult) Reset()         { *m = TextFilterDetailGrpcResult{} }
func (m *TextFilterDetailGrpcResult) String() string { return proto.CompactTextString(m) }
func (*TextFilterDetailGrpcResult) ProtoMessage()    {}
func (*TextFilterDetailGrpcResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{7}
}

func (m *TextFilterDetailGrpcResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFilterDetailGrpcResult.Unmarshal(m, b)
}
func (m *TextFilterDetailGrpcResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFilterDetailGrpcResult.Marshal(b, m, deterministic)
}
func (m *TextFilterDetailGrpcResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFilterDetailGrpcResult.Merge(m, src)
}
func (m *TextFilterDetailGrpcResult) XXX_Size() int {
	return xxx_messageInfo_TextFilterDetailGrpcResult.Size(m)
}
func (m *TextFilterDetailGrpcResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFilterDetailGrpcResult.DiscardUnknown(m)
}

var xxx_messageInfo_TextFilterDetailGrpcResult proto.InternalMessageInfo

func (m *TextFilterDetailGrpcResult) GetRiskLevel() string {
	if m != nil {
		return m.RiskLevel
	}
	return ""
}

func (m *TextFilterDetailGrpcResult) GetRiskCode() string {
	if m != nil {
		return m.RiskCode
	}
	return ""
}

func (m *TextFilterDetailGrpcResult) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *TextFilterDetailGrpcResult) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type TextFilterContactGrpcResult struct {
	ContactType          string   `protobuf:"bytes,1,opt,name=contactType,proto3" json:"contactType,omitempty"`
	ContactString        string   `protobuf:"bytes,2,opt,name=contactString,proto3" json:"contactString,omitempty"`
	Position             string   `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextFilterContactGrpcResult) Reset()         { *m = TextFilterContactGrpcResult{} }
func (m *TextFilterContactGrpcResult) String() string { return proto.CompactTextString(m) }
func (*TextFilterContactGrpcResult) ProtoMessage()    {}
func (*TextFilterContactGrpcResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_1cd3c96dd959c21d, []int{8}
}

func (m *TextFilterContactGrpcResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextFilterContactGrpcResult.Unmarshal(m, b)
}
func (m *TextFilterContactGrpcResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextFilterContactGrpcResult.Marshal(b, m, deterministic)
}
func (m *TextFilterContactGrpcResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextFilterContactGrpcResult.Merge(m, src)
}
func (m *TextFilterContactGrpcResult) XXX_Size() int {
	return xxx_messageInfo_TextFilterContactGrpcResult.Size(m)
}
func (m *TextFilterContactGrpcResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TextFilterContactGrpcResult.DiscardUnknown(m)
}

var xxx_messageInfo_TextFilterContactGrpcResult proto.InternalMessageInfo

func (m *TextFilterContactGrpcResult) GetContactType() string {
	if m != nil {
		return m.ContactType
	}
	return ""
}

func (m *TextFilterContactGrpcResult) GetContactString() string {
	if m != nil {
		return m.ContactString
	}
	return ""
}

func (m *TextFilterContactGrpcResult) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func init() {
	proto.RegisterType((*TextFindAllGrpcRequest)(nil), "textfilter.TextFindAllGrpcRequest")
	proto.RegisterType((*TextFindAllAsyncGrpcRequest)(nil), "textfilter.TextFindAllAsyncGrpcRequest")
	proto.RegisterType((*TextReplaceGrpcRequest)(nil), "textfilter.TextReplaceGrpcRequest")
	proto.RegisterType((*TextReplaceAsyncGrpcRequest)(nil), "textfilter.TextReplaceAsyncGrpcRequest")
	proto.RegisterType((*TextFilterRequestIdGrpcReply)(nil), "textfilter.TextFilterRequestIdGrpcReply")
	proto.RegisterType((*TextFindAllGrpcReply)(nil), "textfilter.TextFindAllGrpcReply")
	proto.RegisterType((*TextReplaceGrpcReply)(nil), "textfilter.TextReplaceGrpcReply")
	proto.RegisterType((*TextFilterDetailGrpcResult)(nil), "textfilter.TextFilterDetailGrpcResult")
	proto.RegisterType((*TextFilterContactGrpcResult)(nil), "textfilter.TextFilterContactGrpcResult")
}

func init() {
	proto.RegisterFile("textFilter.proto", fileDescriptor_1cd3c96dd959c21d)
}

var fileDescriptor_1cd3c96dd959c21d = []byte{
	// 689 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcd, 0x6e, 0x13, 0x3d,
	0x14, 0xd5, 0x24, 0x6d, 0x33, 0xb9, 0xf9, 0xfa, 0x23, 0xb7, 0xaa, 0x46, 0xf9, 0x2a, 0x14, 0x8d,
	0x50, 0x9b, 0x55, 0x17, 0xe5, 0x05, 0x68, 0x83, 0x28, 0x20, 0x90, 0x90, 0x13, 0xc1, 0x3a, 0xcc,
	0x98, 0xd6, 0xad, 0x3b, 0x1e, 0x6c, 0xa7, 0x6d, 0x96, 0x6c, 0xd8, 0xf2, 0x08, 0xec, 0x79, 0x15,
	0xde, 0x80, 0x25, 0x4f, 0xc1, 0x12, 0xd9, 0xf3, 0x3f, 0x93, 0x54, 0xa2, 0xcc, 0x20, 0x76, 0xe3,
	0x33, 0x9e, 0x73, 0x8e, 0xcf, 0xf5, 0xb5, 0x13, 0xd8, 0x52, 0xe4, 0x56, 0x3d, 0xa5, 0x4c, 0x11,
	0x71, 0x18, 0x0a, 0xae, 0x38, 0x02, 0x8d, 0xbc, 0x37, 0x88, 0x7b, 0x01, 0xbb, 0x13, 0xf3, 0x3e,
	0xf0, 0x8f, 0x19, 0x3b, 0x15, 0xa1, 0x87, 0xc9, 0x87, 0x19, 0x91, 0x0a, 0x6d, 0x41, 0x5b, 0xdd,
	0x2a, 0xc7, 0x1a, 0x58, 0xc3, 0x2e, 0xd6, 0x8f, 0xa8, 0x0f, 0xb6, 0xbc, 0xa4, 0xe1, 0x09, 0xf5,
	0xa9, 0xd3, 0x1a, 0x58, 0x43, 0x1b, 0xa7, 0x63, 0xe4, 0xc2, 0x7f, 0x3c, 0x60, 0xf3, 0xd7, 0x5c,
	0x52, 0x45, 0x79, 0xe0, 0xb4, 0xcd, 0xfb, 0x02, 0xe6, 0x7e, 0xb1, 0xe0, 0xff, 0x9c, 0xd8, 0xb1,
	0x9c, 0x07, 0x5e, 0xa3, 0x8a, 0x68, 0x0f, 0xba, 0x22, 0x22, 0x7f, 0xee, 0x3b, 0x2b, 0x86, 0x37,
	0x03, 0xb4, 0xde, 0x4c, 0x30, 0x67, 0x35, 0xd2, 0x9b, 0x09, 0xe6, 0x7e, 0xb7, 0xa2, 0x38, 0x30,
	0x09, 0xd9, 0xd4, 0x23, 0xf7, 0x37, 0x37, 0x80, 0x9e, 0x88, 0x38, 0x46, 0xe7, 0x53, 0x61, 0xbc,
	0xad, 0xe3, 0x3c, 0x84, 0x1e, 0xc2, 0xba, 0x20, 0xd7, 0x94, 0xdc, 0xc4, 0x5a, 0xc6, 0x9e, 0x8d,
	0x8b, 0x20, 0xda, 0x87, 0x0d, 0x8f, 0x07, 0x6a, 0xea, 0x25, 0x96, 0x8c, 0x5b, 0x1b, 0x97, 0xd0,
	0x4a, 0x18, 0x6b, 0x0b, 0xe2, 0xff, 0xdc, 0x8a, 0xe2, 0x8f, 0xbf, 0xf9, 0xc3, 0xf8, 0xff, 0xc1,
	0x15, 0x16, 0xcb, 0xdd, 0x59, 0x52, 0x6e, 0x3b, 0x2b, 0xf7, 0x05, 0xec, 0x4d, 0xd2, 0xe6, 0xc0,
	0xc9, 0xc4, 0x28, 0x93, 0x90, 0xcd, 0x11, 0x82, 0x15, 0x8f, 0xfb, 0xc4, 0x44, 0xb2, 0x8a, 0xcd,
	0x33, 0x72, 0xa0, 0x73, 0x45, 0xa4, 0x9c, 0x9e, 0x11, 0x13, 0x49, 0x17, 0x27, 0xc3, 0xa2, 0x7a,
	0xbb, 0xa4, 0xee, 0x7e, 0x6b, 0xc1, 0x4e, 0xa5, 0xd3, 0x6a, 0x16, 0x31, 0x6f, 0xa9, 0xbc, 0x7c,
	0x49, 0xae, 0x09, 0x4b, 0xf7, 0x7b, 0x02, 0xe8, 0x72, 0xea, 0xc1, 0x48, 0xab, 0x45, 0x9b, 0x3e,
	0x1d, 0xeb, 0x32, 0x48, 0x12, 0x28, 0x7a, 0x45, 0x02, 0x35, 0xf6, 0xb8, 0x20, 0x26, 0xe0, 0x16,
	0x2e, 0xa1, 0xe8, 0x31, 0x74, 0x7c, 0xa2, 0xa6, 0x94, 0x49, 0xa7, 0x33, 0x68, 0x0f, 0x7b, 0x47,
	0xfb, 0x87, 0xd9, 0x69, 0x72, 0x98, 0xa5, 0xf9, 0xc4, 0x4c, 0x8a, 0x56, 0x29, 0x67, 0x4c, 0xe1,
	0xe4, 0x33, 0x34, 0x02, 0x3b, 0x2e, 0xad, 0x74, 0x6c, 0x43, 0x71, 0xb0, 0x98, 0x62, 0x14, 0xcd,
	0xca, 0x71, 0xa4, 0x1f, 0xba, 0x3f, 0xac, 0x28, 0xcd, 0x42, 0xa3, 0xfe, 0xdd, 0x34, 0x1f, 0x00,
	0x08, 0x63, 0x4b, 0xfb, 0x88, 0xf3, 0xcc, 0x21, 0xf9, 0xa4, 0xd6, 0xee, 0x95, 0x94, 0xfb, 0xc9,
	0x82, 0xfe, 0xf2, 0x79, 0x45, 0x7b, 0xd6, 0x5d, 0xc5, 0x6e, 0x95, 0x8a, 0xdd, 0x07, 0x3b, 0xcc,
	0x1f, 0x9b, 0x5d, 0x9c, 0x8e, 0x75, 0x80, 0xda, 0x66, 0xbc, 0x5e, 0xf3, 0xec, 0x7e, 0x4c, 0x0f,
	0xee, 0x85, 0x75, 0xd1, 0x67, 0x41, 0x5c, 0x99, 0xc9, 0x3c, 0x24, 0xb1, 0x97, 0x3c, 0xa4, 0xcf,
	0x82, 0x78, 0x38, 0x56, 0x82, 0x06, 0x67, 0xb1, 0xa5, 0x22, 0x78, 0x97, 0xaf, 0xa3, 0x9f, 0x3d,
	0xd8, 0xc8, 0x3c, 0x68, 0x71, 0x84, 0x01, 0x32, 0x04, 0xb9, 0xd5, 0x78, 0xcb, 0x77, 0x5a, 0x7f,
	0x70, 0xe7, 0x1c, 0xbd, 0x7f, 0x30, 0xc0, 0x0b, 0xc9, 0x83, 0xba, 0x39, 0x9f, 0xa9, 0x2b, 0x56,
	0x2b, 0xe7, 0x1b, 0xd8, 0x78, 0x35, 0x15, 0x97, 0x3e, 0xbf, 0xa9, 0xd7, 0xeb, 0x18, 0x7a, 0xb9,
	0xbe, 0xaa, 0x92, 0x56, 0x6f, 0xc6, 0x2a, 0x69, 0xa5, 0x29, 0xc7, 0xd0, 0xd3, 0xa1, 0xd6, 0x4e,
	0xaa, 0x53, 0xad, 0x97, 0xf4, 0x2d, 0x6c, 0x26, 0xb1, 0xd6, 0x4b, 0xec, 0xc3, 0x66, 0xb6, 0x57,
	0xcd, 0xd5, 0x8b, 0x0e, 0x96, 0x14, 0xa3, 0x7c, 0x31, 0xf7, 0x87, 0x8b, 0x0f, 0x8e, 0x05, 0x17,
	0x96, 0x0f, 0x9b, 0xd9, 0xee, 0x6d, 0x52, 0x25, 0xdb, 0xcf, 0x8d, 0xa9, 0x9c, 0xc3, 0x76, 0x71,
	0x87, 0x37, 0xa6, 0x44, 0x60, 0xab, 0xfc, 0xbb, 0xa8, 0x2a, 0xb3, 0xe4, 0x57, 0xd3, 0xef, 0xc9,
	0xe4, 0xba, 0xa0, 0x49, 0x99, 0x5c, 0x5f, 0x34, 0x26, 0x43, 0x61, 0xa7, 0xd4, 0x29, 0x4d, 0x49,
	0x9d, 0xec, 0x7e, 0x6d, 0x6d, 0x4f, 0x38, 0x67, 0xa7, 0x9c, 0xfb, 0xb9, 0x99, 0xef, 0xd6, 0xcc,
	0xdf, 0x99, 0x47, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x51, 0x86, 0x25, 0x4b, 0xe2, 0x0c, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TextFilterGrpcClient is the client API for TextFilterGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TextFilterGrpcClient interface {
	TextFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error)
	JsonFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error)
	HtmlFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error)
	MarkdownFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error)
	TextReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error)
	JsonReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error)
	HtmlReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error)
	MarkdownReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error)
	TextFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	JsonFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	HtmlFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	MarkdownFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	TextReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	JsonReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	HtmlReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
	MarkdownReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error)
}

type textFilterGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewTextFilterGrpcClient(cc grpc.ClientConnInterface) TextFilterGrpcClient {
	return &textFilterGrpcClient{cc}
}

func (c *textFilterGrpcClient) TextFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error) {
	out := new(TextFindAllGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/TextFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) JsonFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error) {
	out := new(TextFindAllGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/JsonFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) HtmlFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error) {
	out := new(TextFindAllGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/HtmlFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) MarkdownFilter(ctx context.Context, in *TextFindAllGrpcRequest, opts ...grpc.CallOption) (*TextFindAllGrpcReply, error) {
	out := new(TextFindAllGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/MarkdownFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) TextReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error) {
	out := new(TextReplaceGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/TextReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) JsonReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error) {
	out := new(TextReplaceGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/JsonReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) HtmlReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error) {
	out := new(TextReplaceGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/HtmlReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) MarkdownReplace(ctx context.Context, in *TextReplaceGrpcRequest, opts ...grpc.CallOption) (*TextReplaceGrpcReply, error) {
	out := new(TextReplaceGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/MarkdownReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) TextFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/TextFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) JsonFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/JsonFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) HtmlFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/HtmlFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) MarkdownFilterAsync(ctx context.Context, in *TextFindAllAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/MarkdownFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) TextReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/TextReplaceAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) JsonReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/JsonReplaceAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) HtmlReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/HtmlReplaceAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textFilterGrpcClient) MarkdownReplaceAsync(ctx context.Context, in *TextReplaceAsyncGrpcRequest, opts ...grpc.CallOption) (*TextFilterRequestIdGrpcReply, error) {
	out := new(TextFilterRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/textfilter.TextFilterGrpc/MarkdownReplaceAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TextFilterGrpcServer is the server API for TextFilterGrpc service.
type TextFilterGrpcServer interface {
	TextFilter(context.Context, *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error)
	JsonFilter(context.Context, *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error)
	HtmlFilter(context.Context, *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error)
	MarkdownFilter(context.Context, *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error)
	TextReplace(context.Context, *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error)
	JsonReplace(context.Context, *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error)
	HtmlReplace(context.Context, *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error)
	MarkdownReplace(context.Context, *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error)
	TextFilterAsync(context.Context, *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	JsonFilterAsync(context.Context, *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	HtmlFilterAsync(context.Context, *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	MarkdownFilterAsync(context.Context, *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	TextReplaceAsync(context.Context, *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	JsonReplaceAsync(context.Context, *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	HtmlReplaceAsync(context.Context, *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
	MarkdownReplaceAsync(context.Context, *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error)
}

// UnimplementedTextFilterGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedTextFilterGrpcServer struct {
}

func (*UnimplementedTextFilterGrpcServer) TextFilter(ctx context.Context, req *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextFilter not implemented")
}
func (*UnimplementedTextFilterGrpcServer) JsonFilter(ctx context.Context, req *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JsonFilter not implemented")
}
func (*UnimplementedTextFilterGrpcServer) HtmlFilter(ctx context.Context, req *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HtmlFilter not implemented")
}
func (*UnimplementedTextFilterGrpcServer) MarkdownFilter(ctx context.Context, req *TextFindAllGrpcRequest) (*TextFindAllGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkdownFilter not implemented")
}
func (*UnimplementedTextFilterGrpcServer) TextReplace(ctx context.Context, req *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextReplace not implemented")
}
func (*UnimplementedTextFilterGrpcServer) JsonReplace(ctx context.Context, req *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JsonReplace not implemented")
}
func (*UnimplementedTextFilterGrpcServer) HtmlReplace(ctx context.Context, req *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HtmlReplace not implemented")
}
func (*UnimplementedTextFilterGrpcServer) MarkdownReplace(ctx context.Context, req *TextReplaceGrpcRequest) (*TextReplaceGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkdownReplace not implemented")
}
func (*UnimplementedTextFilterGrpcServer) TextFilterAsync(ctx context.Context, req *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextFilterAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) JsonFilterAsync(ctx context.Context, req *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JsonFilterAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) HtmlFilterAsync(ctx context.Context, req *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HtmlFilterAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) MarkdownFilterAsync(ctx context.Context, req *TextFindAllAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkdownFilterAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) TextReplaceAsync(ctx context.Context, req *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextReplaceAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) JsonReplaceAsync(ctx context.Context, req *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JsonReplaceAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) HtmlReplaceAsync(ctx context.Context, req *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HtmlReplaceAsync not implemented")
}
func (*UnimplementedTextFilterGrpcServer) MarkdownReplaceAsync(ctx context.Context, req *TextReplaceAsyncGrpcRequest) (*TextFilterRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkdownReplaceAsync not implemented")
}

func RegisterTextFilterGrpcServer(s *grpc.Server, srv TextFilterGrpcServer) {
	s.RegisterService(&_TextFilterGrpc_serviceDesc, srv)
}

func _TextFilterGrpc_TextFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).TextFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/TextFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).TextFilter(ctx, req.(*TextFindAllGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_JsonFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).JsonFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/JsonFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).JsonFilter(ctx, req.(*TextFindAllGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_HtmlFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).HtmlFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/HtmlFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).HtmlFilter(ctx, req.(*TextFindAllGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_MarkdownFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).MarkdownFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/MarkdownFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).MarkdownFilter(ctx, req.(*TextFindAllGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_TextReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).TextReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/TextReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).TextReplace(ctx, req.(*TextReplaceGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_JsonReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).JsonReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/JsonReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).JsonReplace(ctx, req.(*TextReplaceGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_HtmlReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).HtmlReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/HtmlReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).HtmlReplace(ctx, req.(*TextReplaceGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_MarkdownReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).MarkdownReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/MarkdownReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).MarkdownReplace(ctx, req.(*TextReplaceGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_TextFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).TextFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/TextFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).TextFilterAsync(ctx, req.(*TextFindAllAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_JsonFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).JsonFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/JsonFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).JsonFilterAsync(ctx, req.(*TextFindAllAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_HtmlFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).HtmlFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/HtmlFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).HtmlFilterAsync(ctx, req.(*TextFindAllAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_MarkdownFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextFindAllAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).MarkdownFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/MarkdownFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).MarkdownFilterAsync(ctx, req.(*TextFindAllAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_TextReplaceAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).TextReplaceAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/TextReplaceAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).TextReplaceAsync(ctx, req.(*TextReplaceAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_JsonReplaceAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).JsonReplaceAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/JsonReplaceAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).JsonReplaceAsync(ctx, req.(*TextReplaceAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_HtmlReplaceAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).HtmlReplaceAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/HtmlReplaceAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).HtmlReplaceAsync(ctx, req.(*TextReplaceAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextFilterGrpc_MarkdownReplaceAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextReplaceAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextFilterGrpcServer).MarkdownReplaceAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/textfilter.TextFilterGrpc/MarkdownReplaceAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextFilterGrpcServer).MarkdownReplaceAsync(ctx, req.(*TextReplaceAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TextFilterGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "textfilter.TextFilterGrpc",
	HandlerType: (*TextFilterGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TextFilter",
			Handler:    _TextFilterGrpc_TextFilter_Handler,
		},
		{
			MethodName: "JsonFilter",
			Handler:    _TextFilterGrpc_JsonFilter_Handler,
		},
		{
			MethodName: "HtmlFilter",
			Handler:    _TextFilterGrpc_HtmlFilter_Handler,
		},
		{
			MethodName: "MarkdownFilter",
			Handler:    _TextFilterGrpc_MarkdownFilter_Handler,
		},
		{
			MethodName: "TextReplace",
			Handler:    _TextFilterGrpc_TextReplace_Handler,
		},
		{
			MethodName: "JsonReplace",
			Handler:    _TextFilterGrpc_JsonReplace_Handler,
		},
		{
			MethodName: "HtmlReplace",
			Handler:    _TextFilterGrpc_HtmlReplace_Handler,
		},
		{
			MethodName: "MarkdownReplace",
			Handler:    _TextFilterGrpc_MarkdownReplace_Handler,
		},
		{
			MethodName: "TextFilterAsync",
			Handler:    _TextFilterGrpc_TextFilterAsync_Handler,
		},
		{
			MethodName: "JsonFilterAsync",
			Handler:    _TextFilterGrpc_JsonFilterAsync_Handler,
		},
		{
			MethodName: "HtmlFilterAsync",
			Handler:    _TextFilterGrpc_HtmlFilterAsync_Handler,
		},
		{
			MethodName: "MarkdownFilterAsync",
			Handler:    _TextFilterGrpc_MarkdownFilterAsync_Handler,
		},
		{
			MethodName: "TextReplaceAsync",
			Handler:    _TextFilterGrpc_TextReplaceAsync_Handler,
		},
		{
			MethodName: "JsonReplaceAsync",
			Handler:    _TextFilterGrpc_JsonReplaceAsync_Handler,
		},
		{
			MethodName: "HtmlReplaceAsync",
			Handler:    _TextFilterGrpc_HtmlReplaceAsync_Handler,
		},
		{
			MethodName: "MarkdownReplaceAsync",
			Handler:    _TextFilterGrpc_MarkdownReplaceAsync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "textFilter.proto",
}
