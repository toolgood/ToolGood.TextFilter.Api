// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imageClassify.proto

package GrpcBase

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImageLocalGrpcRequest2 struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageLocalGrpcRequest2) Reset()         { *m = ImageLocalGrpcRequest2{} }
func (m *ImageLocalGrpcRequest2) String() string { return proto.CompactTextString(m) }
func (*ImageLocalGrpcRequest2) ProtoMessage()    {}
func (*ImageLocalGrpcRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{0}
}

func (m *ImageLocalGrpcRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageLocalGrpcRequest2.Unmarshal(m, b)
}
func (m *ImageLocalGrpcRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageLocalGrpcRequest2.Marshal(b, m, deterministic)
}
func (m *ImageLocalGrpcRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageLocalGrpcRequest2.Merge(m, src)
}
func (m *ImageLocalGrpcRequest2) XXX_Size() int {
	return xxx_messageInfo_ImageLocalGrpcRequest2.Size(m)
}
func (m *ImageLocalGrpcRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageLocalGrpcRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageLocalGrpcRequest2 proto.InternalMessageInfo

func (m *ImageLocalGrpcRequest2) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ImageUploadGrpcRequest2 struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageUploadGrpcRequest2) Reset()         { *m = ImageUploadGrpcRequest2{} }
func (m *ImageUploadGrpcRequest2) String() string { return proto.CompactTextString(m) }
func (*ImageUploadGrpcRequest2) ProtoMessage()    {}
func (*ImageUploadGrpcRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{1}
}

func (m *ImageUploadGrpcRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageUploadGrpcRequest2.Unmarshal(m, b)
}
func (m *ImageUploadGrpcRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageUploadGrpcRequest2.Marshal(b, m, deterministic)
}
func (m *ImageUploadGrpcRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageUploadGrpcRequest2.Merge(m, src)
}
func (m *ImageUploadGrpcRequest2) XXX_Size() int {
	return xxx_messageInfo_ImageUploadGrpcRequest2.Size(m)
}
func (m *ImageUploadGrpcRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageUploadGrpcRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageUploadGrpcRequest2 proto.InternalMessageInfo

func (m *ImageUploadGrpcRequest2) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type ImageLocalAsyncGrpcRequest2 struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageLocalAsyncGrpcRequest2) Reset()         { *m = ImageLocalAsyncGrpcRequest2{} }
func (m *ImageLocalAsyncGrpcRequest2) String() string { return proto.CompactTextString(m) }
func (*ImageLocalAsyncGrpcRequest2) ProtoMessage()    {}
func (*ImageLocalAsyncGrpcRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{2}
}

func (m *ImageLocalAsyncGrpcRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest2.Unmarshal(m, b)
}
func (m *ImageLocalAsyncGrpcRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest2.Marshal(b, m, deterministic)
}
func (m *ImageLocalAsyncGrpcRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageLocalAsyncGrpcRequest2.Merge(m, src)
}
func (m *ImageLocalAsyncGrpcRequest2) XXX_Size() int {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest2.Size(m)
}
func (m *ImageLocalAsyncGrpcRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageLocalAsyncGrpcRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageLocalAsyncGrpcRequest2 proto.InternalMessageInfo

func (m *ImageLocalAsyncGrpcRequest2) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ImageLocalAsyncGrpcRequest2) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageLocalAsyncGrpcRequest2) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageUploadAsyncGrpcRequest2 struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageUploadAsyncGrpcRequest2) Reset()         { *m = ImageUploadAsyncGrpcRequest2{} }
func (m *ImageUploadAsyncGrpcRequest2) String() string { return proto.CompactTextString(m) }
func (*ImageUploadAsyncGrpcRequest2) ProtoMessage()    {}
func (*ImageUploadAsyncGrpcRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{3}
}

func (m *ImageUploadAsyncGrpcRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest2.Unmarshal(m, b)
}
func (m *ImageUploadAsyncGrpcRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest2.Marshal(b, m, deterministic)
}
func (m *ImageUploadAsyncGrpcRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageUploadAsyncGrpcRequest2.Merge(m, src)
}
func (m *ImageUploadAsyncGrpcRequest2) XXX_Size() int {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest2.Size(m)
}
func (m *ImageUploadAsyncGrpcRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageUploadAsyncGrpcRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageUploadAsyncGrpcRequest2 proto.InternalMessageInfo

func (m *ImageUploadAsyncGrpcRequest2) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *ImageUploadAsyncGrpcRequest2) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageUploadAsyncGrpcRequest2) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageRequestIdGrpcReply2 struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageRequestIdGrpcReply2) Reset()         { *m = ImageRequestIdGrpcReply2{} }
func (m *ImageRequestIdGrpcReply2) String() string { return proto.CompactTextString(m) }
func (*ImageRequestIdGrpcReply2) ProtoMessage()    {}
func (*ImageRequestIdGrpcReply2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{4}
}

func (m *ImageRequestIdGrpcReply2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageRequestIdGrpcReply2.Unmarshal(m, b)
}
func (m *ImageRequestIdGrpcReply2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageRequestIdGrpcReply2.Marshal(b, m, deterministic)
}
func (m *ImageRequestIdGrpcReply2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageRequestIdGrpcReply2.Merge(m, src)
}
func (m *ImageRequestIdGrpcReply2) XXX_Size() int {
	return xxx_messageInfo_ImageRequestIdGrpcReply2.Size(m)
}
func (m *ImageRequestIdGrpcReply2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageRequestIdGrpcReply2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageRequestIdGrpcReply2 proto.InternalMessageInfo

func (m *ImageRequestIdGrpcReply2) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageRequestIdGrpcReply2) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageRequestIdGrpcReply2) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type ImageFilterGrpcReply2 struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Unsafe               float32  `protobuf:"fixed32,4,opt,name=unsafe,proto3" json:"unsafe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageFilterGrpcReply2) Reset()         { *m = ImageFilterGrpcReply2{} }
func (m *ImageFilterGrpcReply2) String() string { return proto.CompactTextString(m) }
func (*ImageFilterGrpcReply2) ProtoMessage()    {}
func (*ImageFilterGrpcReply2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{5}
}

func (m *ImageFilterGrpcReply2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFilterGrpcReply2.Unmarshal(m, b)
}
func (m *ImageFilterGrpcReply2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFilterGrpcReply2.Marshal(b, m, deterministic)
}
func (m *ImageFilterGrpcReply2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFilterGrpcReply2.Merge(m, src)
}
func (m *ImageFilterGrpcReply2) XXX_Size() int {
	return xxx_messageInfo_ImageFilterGrpcReply2.Size(m)
}
func (m *ImageFilterGrpcReply2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFilterGrpcReply2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFilterGrpcReply2 proto.InternalMessageInfo

func (m *ImageFilterGrpcReply2) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageFilterGrpcReply2) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageFilterGrpcReply2) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageFilterGrpcReply2) GetUnsafe() float32 {
	if m != nil {
		return m.Unsafe
	}
	return 0
}

type ImageClassifyGrpcReply2 struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Porn                 float32  `protobuf:"fixed32,4,opt,name=porn,proto3" json:"porn,omitempty"`
	Bloody               float32  `protobuf:"fixed32,5,opt,name=bloody,proto3" json:"bloody,omitempty"`
	Hentai               float32  `protobuf:"fixed32,6,opt,name=hentai,proto3" json:"hentai,omitempty"`
	Lure                 float32  `protobuf:"fixed32,7,opt,name=lure,proto3" json:"lure,omitempty"`
	Sexy                 float32  `protobuf:"fixed32,8,opt,name=sexy,proto3" json:"sexy,omitempty"`
	Normal               float32  `protobuf:"fixed32,9,opt,name=normal,proto3" json:"normal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageClassifyGrpcReply2) Reset()         { *m = ImageClassifyGrpcReply2{} }
func (m *ImageClassifyGrpcReply2) String() string { return proto.CompactTextString(m) }
func (*ImageClassifyGrpcReply2) ProtoMessage()    {}
func (*ImageClassifyGrpcReply2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{6}
}

func (m *ImageClassifyGrpcReply2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageClassifyGrpcReply2.Unmarshal(m, b)
}
func (m *ImageClassifyGrpcReply2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageClassifyGrpcReply2.Marshal(b, m, deterministic)
}
func (m *ImageClassifyGrpcReply2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageClassifyGrpcReply2.Merge(m, src)
}
func (m *ImageClassifyGrpcReply2) XXX_Size() int {
	return xxx_messageInfo_ImageClassifyGrpcReply2.Size(m)
}
func (m *ImageClassifyGrpcReply2) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageClassifyGrpcReply2.DiscardUnknown(m)
}

var xxx_messageInfo_ImageClassifyGrpcReply2 proto.InternalMessageInfo

func (m *ImageClassifyGrpcReply2) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageClassifyGrpcReply2) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageClassifyGrpcReply2) GetPorn() float32 {
	if m != nil {
		return m.Porn
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetBloody() float32 {
	if m != nil {
		return m.Bloody
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetHentai() float32 {
	if m != nil {
		return m.Hentai
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetLure() float32 {
	if m != nil {
		return m.Lure
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetSexy() float32 {
	if m != nil {
		return m.Sexy
	}
	return 0
}

func (m *ImageClassifyGrpcReply2) GetNormal() float32 {
	if m != nil {
		return m.Normal
	}
	return 0
}

type ImageBrowserFilterGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Unsafe               float32  `protobuf:"fixed32,4,opt,name=unsafe,proto3" json:"unsafe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageBrowserFilterGrpcReply) Reset()         { *m = ImageBrowserFilterGrpcReply{} }
func (m *ImageBrowserFilterGrpcReply) String() string { return proto.CompactTextString(m) }
func (*ImageBrowserFilterGrpcReply) ProtoMessage()    {}
func (*ImageBrowserFilterGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{7}
}

func (m *ImageBrowserFilterGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageBrowserFilterGrpcReply.Unmarshal(m, b)
}
func (m *ImageBrowserFilterGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageBrowserFilterGrpcReply.Marshal(b, m, deterministic)
}
func (m *ImageBrowserFilterGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageBrowserFilterGrpcReply.Merge(m, src)
}
func (m *ImageBrowserFilterGrpcReply) XXX_Size() int {
	return xxx_messageInfo_ImageBrowserFilterGrpcReply.Size(m)
}
func (m *ImageBrowserFilterGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageBrowserFilterGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImageBrowserFilterGrpcReply proto.InternalMessageInfo

func (m *ImageBrowserFilterGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageBrowserFilterGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageBrowserFilterGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageBrowserFilterGrpcReply) GetUnsafe() float32 {
	if m != nil {
		return m.Unsafe
	}
	return 0
}

type ImageBrowserClassifyGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Porn                 float32  `protobuf:"fixed32,4,opt,name=porn,proto3" json:"porn,omitempty"`
	Bloody               float32  `protobuf:"fixed32,5,opt,name=bloody,proto3" json:"bloody,omitempty"`
	Hentai               float32  `protobuf:"fixed32,6,opt,name=hentai,proto3" json:"hentai,omitempty"`
	Lure                 float32  `protobuf:"fixed32,7,opt,name=lure,proto3" json:"lure,omitempty"`
	Sexy                 float32  `protobuf:"fixed32,8,opt,name=sexy,proto3" json:"sexy,omitempty"`
	Normal               float32  `protobuf:"fixed32,9,opt,name=normal,proto3" json:"normal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageBrowserClassifyGrpcReply) Reset()         { *m = ImageBrowserClassifyGrpcReply{} }
func (m *ImageBrowserClassifyGrpcReply) String() string { return proto.CompactTextString(m) }
func (*ImageBrowserClassifyGrpcReply) ProtoMessage()    {}
func (*ImageBrowserClassifyGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{8}
}

func (m *ImageBrowserClassifyGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageBrowserClassifyGrpcReply.Unmarshal(m, b)
}
func (m *ImageBrowserClassifyGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageBrowserClassifyGrpcReply.Marshal(b, m, deterministic)
}
func (m *ImageBrowserClassifyGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageBrowserClassifyGrpcReply.Merge(m, src)
}
func (m *ImageBrowserClassifyGrpcReply) XXX_Size() int {
	return xxx_messageInfo_ImageBrowserClassifyGrpcReply.Size(m)
}
func (m *ImageBrowserClassifyGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageBrowserClassifyGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImageBrowserClassifyGrpcReply proto.InternalMessageInfo

func (m *ImageBrowserClassifyGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageBrowserClassifyGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageBrowserClassifyGrpcReply) GetPorn() float32 {
	if m != nil {
		return m.Porn
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetBloody() float32 {
	if m != nil {
		return m.Bloody
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetHentai() float32 {
	if m != nil {
		return m.Hentai
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetLure() float32 {
	if m != nil {
		return m.Lure
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetSexy() float32 {
	if m != nil {
		return m.Sexy
	}
	return 0
}

func (m *ImageBrowserClassifyGrpcReply) GetNormal() float32 {
	if m != nil {
		return m.Normal
	}
	return 0
}

type BrowserGrpcRequest struct {
	Params               []float32 `protobuf:"fixed32,1,rep,packed,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BrowserGrpcRequest) Reset()         { *m = BrowserGrpcRequest{} }
func (m *BrowserGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*BrowserGrpcRequest) ProtoMessage()    {}
func (*BrowserGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{9}
}

func (m *BrowserGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowserGrpcRequest.Unmarshal(m, b)
}
func (m *BrowserGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowserGrpcRequest.Marshal(b, m, deterministic)
}
func (m *BrowserGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowserGrpcRequest.Merge(m, src)
}
func (m *BrowserGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_BrowserGrpcRequest.Size(m)
}
func (m *BrowserGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowserGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrowserGrpcRequest proto.InternalMessageInfo

func (m *BrowserGrpcRequest) GetParams() []float32 {
	if m != nil {
		return m.Params
	}
	return nil
}

type BrowserAsyncGrpcRequest struct {
	Params               []float32 `protobuf:"fixed32,1,rep,packed,name=params,proto3" json:"params,omitempty"`
	RequestId            string    `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string    `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BrowserAsyncGrpcRequest) Reset()         { *m = BrowserAsyncGrpcRequest{} }
func (m *BrowserAsyncGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*BrowserAsyncGrpcRequest) ProtoMessage()    {}
func (*BrowserAsyncGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_676aff3ffedb2171, []int{10}
}

func (m *BrowserAsyncGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowserAsyncGrpcRequest.Unmarshal(m, b)
}
func (m *BrowserAsyncGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowserAsyncGrpcRequest.Marshal(b, m, deterministic)
}
func (m *BrowserAsyncGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowserAsyncGrpcRequest.Merge(m, src)
}
func (m *BrowserAsyncGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_BrowserAsyncGrpcRequest.Size(m)
}
func (m *BrowserAsyncGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowserAsyncGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrowserAsyncGrpcRequest proto.InternalMessageInfo

func (m *BrowserAsyncGrpcRequest) GetParams() []float32 {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *BrowserAsyncGrpcRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *BrowserAsyncGrpcRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*ImageLocalGrpcRequest2)(nil), "toolgood.textfilter.api.GrpcBase.ImageLocalGrpcRequest2")
	proto.RegisterType((*ImageUploadGrpcRequest2)(nil), "toolgood.textfilter.api.GrpcBase.ImageUploadGrpcRequest2")
	proto.RegisterType((*ImageLocalAsyncGrpcRequest2)(nil), "toolgood.textfilter.api.GrpcBase.ImageLocalAsyncGrpcRequest2")
	proto.RegisterType((*ImageUploadAsyncGrpcRequest2)(nil), "toolgood.textfilter.api.GrpcBase.ImageUploadAsyncGrpcRequest2")
	proto.RegisterType((*ImageRequestIdGrpcReply2)(nil), "toolgood.textfilter.api.GrpcBase.ImageRequestIdGrpcReply2")
	proto.RegisterType((*ImageFilterGrpcReply2)(nil), "toolgood.textfilter.api.GrpcBase.ImageFilterGrpcReply2")
	proto.RegisterType((*ImageClassifyGrpcReply2)(nil), "toolgood.textfilter.api.GrpcBase.ImageClassifyGrpcReply2")
	proto.RegisterType((*ImageBrowserFilterGrpcReply)(nil), "toolgood.textfilter.api.GrpcBase.ImageBrowserFilterGrpcReply")
	proto.RegisterType((*ImageBrowserClassifyGrpcReply)(nil), "toolgood.textfilter.api.GrpcBase.ImageBrowserClassifyGrpcReply")
	proto.RegisterType((*BrowserGrpcRequest)(nil), "toolgood.textfilter.api.GrpcBase.BrowserGrpcRequest")
	proto.RegisterType((*BrowserAsyncGrpcRequest)(nil), "toolgood.textfilter.api.GrpcBase.BrowserAsyncGrpcRequest")
}

func init() {
	proto.RegisterFile("imageClassify.proto", fileDescriptor_676aff3ffedb2171)
}

var fileDescriptor_676aff3ffedb2171 = []byte{
	// 576 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0x26, 0x6d, 0x4a, 0x46, 0x20, 0x60, 0x03, 0xe9, 0x2a, 0x14, 0x29, 0xf2, 0xa9, 0x87,
	0xe2, 0x43, 0xe1, 0x40, 0x91, 0x00, 0x11, 0x24, 0xaa, 0x4a, 0x9c, 0xac, 0xf2, 0x01, 0x9b, 0x78,
	0x9d, 0x5a, 0xda, 0x78, 0xcd, 0xae, 0x23, 0x62, 0x71, 0x42, 0xe2, 0x00, 0xaa, 0x7a, 0x43, 0x7c,
	0x04, 0x7f, 0xc6, 0x89, 0x5f, 0x40, 0xbb, 0x6b, 0x37, 0x89, 0x9d, 0x2a, 0x36, 0xa5, 0x20, 0xf5,
	0x36, 0x33, 0x9e, 0x99, 0xf7, 0x32, 0xb3, 0xf3, 0x14, 0xe8, 0x84, 0x13, 0x3a, 0x66, 0xaf, 0x39,
	0x55, 0x2a, 0x0c, 0x52, 0x37, 0x96, 0x22, 0x11, 0xb8, 0x9f, 0x08, 0xc1, 0xc7, 0x42, 0xf8, 0x6e,
	0xc2, 0x66, 0x49, 0x10, 0xf2, 0x84, 0x49, 0x97, 0xc6, 0xa1, 0x7b, 0x28, 0xe3, 0xd1, 0x80, 0x2a,
	0xe6, 0xec, 0x41, 0xf7, 0x48, 0x17, 0xbe, 0x15, 0x23, 0xca, 0x75, 0xd4, 0x63, 0xef, 0xa7, 0x4c,
	0x25, 0xfb, 0x18, 0xc3, 0x46, 0x4c, 0x93, 0x13, 0x82, 0xfa, 0x68, 0xb7, 0xed, 0x19, 0xdb, 0x79,
	0x04, 0xdb, 0x26, 0xfb, 0x5d, 0xcc, 0x05, 0xf5, 0x8b, 0xe9, 0x41, 0xc8, 0x99, 0x49, 0xbf, 0xe9,
	0x19, 0xdb, 0xa1, 0xf0, 0x60, 0xde, 0xfc, 0x95, 0x4a, 0xa3, 0xd1, 0x3a, 0x04, 0xbc, 0x03, 0x6d,
	0x69, 0xbf, 0x1f, 0xf9, 0xa4, 0x61, 0x3e, 0xcc, 0x03, 0xf8, 0x0e, 0x34, 0xa7, 0x92, 0x93, 0xa6,
	0x89, 0x6b, 0xd3, 0x19, 0xc2, 0xce, 0x02, 0xa3, 0x95, 0x18, 0x45, 0x5a, 0xb5, 0x31, 0x02, 0x20,
	0x06, 0xc3, 0xcb, 0x73, 0x2c, 0x42, 0xcc, 0x53, 0xd3, 0x7f, 0x24, 0x7c, 0xdb, 0x7f, 0xd3, 0x33,
	0x36, 0x26, 0xb0, 0x35, 0x61, 0x4a, 0xd1, 0x31, 0xcb, 0xba, 0xe7, 0xee, 0x32, 0x72, 0xb3, 0x80,
	0xec, 0x7c, 0x84, 0xfb, 0x06, 0xe7, 0x8d, 0xd9, 0xd3, 0xd5, 0x80, 0xe0, 0x2e, 0xb4, 0xa6, 0x91,
	0xa2, 0x01, 0x23, 0x1b, 0x7d, 0xb4, 0xdb, 0xf0, 0x32, 0xcf, 0xf9, 0x89, 0xb2, 0xdd, 0xe6, 0x4f,
	0xe8, 0x8a, 0xf0, 0xf5, 0xd2, 0x85, 0x8c, 0x32, 0x74, 0x63, 0x6b, 0x4e, 0x43, 0x2e, 0x84, 0x9f,
	0x92, 0x4d, 0xcb, 0xc9, 0x7a, 0x3a, 0x7e, 0xc2, 0xa2, 0x84, 0x86, 0xa4, 0x65, 0xe3, 0xd6, 0xd3,
	0x3d, 0xf8, 0x54, 0x32, 0xb2, 0x65, 0x7b, 0x68, 0x5b, 0xc7, 0x14, 0x9b, 0xa5, 0xe4, 0x86, 0x8d,
	0x69, 0x5b, 0xd7, 0x47, 0x42, 0x4e, 0x28, 0x27, 0x6d, 0x5b, 0x6f, 0x3d, 0xe7, 0x13, 0xca, 0x1e,
	0xe6, 0x40, 0x8a, 0x0f, 0x8a, 0xc9, 0xc2, 0xc0, 0xff, 0xc9, 0xbc, 0x7f, 0x21, 0x78, 0xb8, 0xc8,
	0xa1, 0x34, 0xf6, 0x6b, 0x37, 0xf5, 0x3d, 0xc0, 0xd9, 0x6f, 0x5d, 0xb8, 0x50, 0x9d, 0x1d, 0x53,
	0x49, 0x27, 0x8a, 0xa0, 0x7e, 0x53, 0x67, 0x5b, 0xcf, 0xa1, 0xb0, 0x9d, 0x65, 0x17, 0x8f, 0xfa,
	0xa2, 0x92, 0xba, 0x77, 0xbd, 0x7f, 0xd6, 0x86, 0xbb, 0xa5, 0x27, 0x8f, 0xbf, 0x22, 0xc0, 0x73,
	0xd5, 0xca, 0x3f, 0xe1, 0xa7, 0xee, 0x3a, 0x2d, 0x75, 0x57, 0x0b, 0x69, 0xef, 0xa0, 0x62, 0xe5,
	0x8a, 0xc3, 0x3b, 0x45, 0xd0, 0x59, 0x90, 0xb7, 0x73, 0x32, 0x55, 0x5b, 0x96, 0x75, 0xfa, 0x32,
	0x6c, 0xbe, 0xe5, 0x12, 0xb1, 0x34, 0x19, 0xb3, 0x1e, 0xfc, 0xbc, 0xce, 0x78, 0x4a, 0x32, 0xdd,
	0x7b, 0x56, 0xb1, 0x7c, 0x95, 0x04, 0x7f, 0x47, 0x99, 0x3e, 0x2f, 0x0f, 0xc9, 0xf2, 0x7a, 0x51,
	0x6b, 0x52, 0x7f, 0x97, 0xd8, 0x67, 0x04, 0xb7, 0x96, 0x14, 0x06, 0x3f, 0x59, 0xdf, 0xad, 0x7c,
	0x22, 0xbd, 0xaa, 0xb3, 0xbd, 0x40, 0xcd, 0xbe, 0x20, 0xb8, 0x5d, 0x10, 0x99, 0x3f, 0x24, 0xf2,
	0xb2, 0x1e, 0x91, 0xb2, 0xa4, 0x9d, 0xa2, 0x73, 0x0d, 0xb0, 0x2c, 0xed, 0x92, 0x0e, 0x2a, 0xb3,
	0x29, 0x2e, 0xe8, 0x52, 0xfb, 0x39, 0x43, 0x70, 0xaf, 0x40, 0xf5, 0x7f, 0xf2, 0x19, 0x74, 0x7f,
	0x34, 0x3a, 0xc7, 0x42, 0xf0, 0x43, 0x5d, 0x7d, 0xcc, 0x66, 0x89, 0x9d, 0xd1, 0xb0, 0x65, 0xfe,
	0xcc, 0x3d, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x05, 0x6c, 0xd0, 0xe3, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImageClassifyGrpcClient is the client API for ImageClassifyGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageClassifyGrpcClient interface {
	ImageLocalClassify(ctx context.Context, in *ImageLocalGrpcRequest2, opts ...grpc.CallOption) (*ImageClassifyGrpcReply2, error)
	ImageUploadClassify(ctx context.Context, in *ImageUploadGrpcRequest2, opts ...grpc.CallOption) (*ImageClassifyGrpcReply2, error)
	ImageLocalClassifyAsync(ctx context.Context, in *ImageLocalAsyncGrpcRequest2, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error)
	ImageUploadClassifyAsync(ctx context.Context, in *ImageUploadAsyncGrpcRequest2, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error)
	BrowserFilter(ctx context.Context, in *BrowserGrpcRequest, opts ...grpc.CallOption) (*ImageBrowserFilterGrpcReply, error)
	BrowserClassify(ctx context.Context, in *BrowserGrpcRequest, opts ...grpc.CallOption) (*ImageBrowserClassifyGrpcReply, error)
	BrowserFilterAsync(ctx context.Context, in *BrowserAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error)
	BrowserClassifyAsync(ctx context.Context, in *BrowserAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error)
}

type imageClassifyGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewImageClassifyGrpcClient(cc grpc.ClientConnInterface) ImageClassifyGrpcClient {
	return &imageClassifyGrpcClient{cc}
}

func (c *imageClassifyGrpcClient) ImageLocalClassify(ctx context.Context, in *ImageLocalGrpcRequest2, opts ...grpc.CallOption) (*ImageClassifyGrpcReply2, error) {
	out := new(ImageClassifyGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageLocalClassify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) ImageUploadClassify(ctx context.Context, in *ImageUploadGrpcRequest2, opts ...grpc.CallOption) (*ImageClassifyGrpcReply2, error) {
	out := new(ImageClassifyGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageUploadClassify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) ImageLocalClassifyAsync(ctx context.Context, in *ImageLocalAsyncGrpcRequest2, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error) {
	out := new(ImageRequestIdGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageLocalClassifyAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) ImageUploadClassifyAsync(ctx context.Context, in *ImageUploadAsyncGrpcRequest2, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error) {
	out := new(ImageRequestIdGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageUploadClassifyAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) BrowserFilter(ctx context.Context, in *BrowserGrpcRequest, opts ...grpc.CallOption) (*ImageBrowserFilterGrpcReply, error) {
	out := new(ImageBrowserFilterGrpcReply)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) BrowserClassify(ctx context.Context, in *BrowserGrpcRequest, opts ...grpc.CallOption) (*ImageBrowserClassifyGrpcReply, error) {
	out := new(ImageBrowserClassifyGrpcReply)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserClassify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) BrowserFilterAsync(ctx context.Context, in *BrowserAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error) {
	out := new(ImageRequestIdGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageClassifyGrpcClient) BrowserClassifyAsync(ctx context.Context, in *BrowserAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply2, error) {
	out := new(ImageRequestIdGrpcReply2)
	err := c.cc.Invoke(ctx, "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserClassifyAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageClassifyGrpcServer is the server API for ImageClassifyGrpc service.
type ImageClassifyGrpcServer interface {
	ImageLocalClassify(context.Context, *ImageLocalGrpcRequest2) (*ImageClassifyGrpcReply2, error)
	ImageUploadClassify(context.Context, *ImageUploadGrpcRequest2) (*ImageClassifyGrpcReply2, error)
	ImageLocalClassifyAsync(context.Context, *ImageLocalAsyncGrpcRequest2) (*ImageRequestIdGrpcReply2, error)
	ImageUploadClassifyAsync(context.Context, *ImageUploadAsyncGrpcRequest2) (*ImageRequestIdGrpcReply2, error)
	BrowserFilter(context.Context, *BrowserGrpcRequest) (*ImageBrowserFilterGrpcReply, error)
	BrowserClassify(context.Context, *BrowserGrpcRequest) (*ImageBrowserClassifyGrpcReply, error)
	BrowserFilterAsync(context.Context, *BrowserAsyncGrpcRequest) (*ImageRequestIdGrpcReply2, error)
	BrowserClassifyAsync(context.Context, *BrowserAsyncGrpcRequest) (*ImageRequestIdGrpcReply2, error)
}

// UnimplementedImageClassifyGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedImageClassifyGrpcServer struct {
}

func (*UnimplementedImageClassifyGrpcServer) ImageLocalClassify(ctx context.Context, req *ImageLocalGrpcRequest2) (*ImageClassifyGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageLocalClassify not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) ImageUploadClassify(ctx context.Context, req *ImageUploadGrpcRequest2) (*ImageClassifyGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageUploadClassify not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) ImageLocalClassifyAsync(ctx context.Context, req *ImageLocalAsyncGrpcRequest2) (*ImageRequestIdGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageLocalClassifyAsync not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) ImageUploadClassifyAsync(ctx context.Context, req *ImageUploadAsyncGrpcRequest2) (*ImageRequestIdGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageUploadClassifyAsync not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) BrowserFilter(ctx context.Context, req *BrowserGrpcRequest) (*ImageBrowserFilterGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrowserFilter not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) BrowserClassify(ctx context.Context, req *BrowserGrpcRequest) (*ImageBrowserClassifyGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrowserClassify not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) BrowserFilterAsync(ctx context.Context, req *BrowserAsyncGrpcRequest) (*ImageRequestIdGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrowserFilterAsync not implemented")
}
func (*UnimplementedImageClassifyGrpcServer) BrowserClassifyAsync(ctx context.Context, req *BrowserAsyncGrpcRequest) (*ImageRequestIdGrpcReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BrowserClassifyAsync not implemented")
}

func RegisterImageClassifyGrpcServer(s *grpc.Server, srv ImageClassifyGrpcServer) {
	s.RegisterService(&_ImageClassifyGrpc_serviceDesc, srv)
}

func _ImageClassifyGrpc_ImageLocalClassify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageLocalGrpcRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).ImageLocalClassify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageLocalClassify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).ImageLocalClassify(ctx, req.(*ImageLocalGrpcRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_ImageUploadClassify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUploadGrpcRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).ImageUploadClassify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageUploadClassify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).ImageUploadClassify(ctx, req.(*ImageUploadGrpcRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_ImageLocalClassifyAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageLocalAsyncGrpcRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).ImageLocalClassifyAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageLocalClassifyAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).ImageLocalClassifyAsync(ctx, req.(*ImageLocalAsyncGrpcRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_ImageUploadClassifyAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUploadAsyncGrpcRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).ImageUploadClassifyAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/ImageUploadClassifyAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).ImageUploadClassifyAsync(ctx, req.(*ImageUploadAsyncGrpcRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_BrowserFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowserGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).BrowserFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).BrowserFilter(ctx, req.(*BrowserGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_BrowserClassify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowserGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).BrowserClassify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserClassify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).BrowserClassify(ctx, req.(*BrowserGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_BrowserFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowserAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).BrowserFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).BrowserFilterAsync(ctx, req.(*BrowserAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageClassifyGrpc_BrowserClassifyAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrowserAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageClassifyGrpcServer).BrowserClassifyAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc/BrowserClassifyAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageClassifyGrpcServer).BrowserClassifyAsync(ctx, req.(*BrowserAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageClassifyGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "toolgood.textfilter.api.GrpcBase.ImageClassifyGrpc",
	HandlerType: (*ImageClassifyGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImageLocalClassify",
			Handler:    _ImageClassifyGrpc_ImageLocalClassify_Handler,
		},
		{
			MethodName: "ImageUploadClassify",
			Handler:    _ImageClassifyGrpc_ImageUploadClassify_Handler,
		},
		{
			MethodName: "ImageLocalClassifyAsync",
			Handler:    _ImageClassifyGrpc_ImageLocalClassifyAsync_Handler,
		},
		{
			MethodName: "ImageUploadClassifyAsync",
			Handler:    _ImageClassifyGrpc_ImageUploadClassifyAsync_Handler,
		},
		{
			MethodName: "BrowserFilter",
			Handler:    _ImageClassifyGrpc_BrowserFilter_Handler,
		},
		{
			MethodName: "BrowserClassify",
			Handler:    _ImageClassifyGrpc_BrowserClassify_Handler,
		},
		{
			MethodName: "BrowserFilterAsync",
			Handler:    _ImageClassifyGrpc_BrowserFilterAsync_Handler,
		},
		{
			MethodName: "BrowserClassifyAsync",
			Handler:    _ImageClassifyGrpc_BrowserClassifyAsync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imageClassify.proto",
}
