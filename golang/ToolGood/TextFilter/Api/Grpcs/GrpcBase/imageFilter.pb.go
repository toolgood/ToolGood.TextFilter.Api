// Code generated by protoc-gen-go. DO NOT EDIT.
// source: imageFilter.proto

package GrpcBase

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImageLocalGrpcRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageLocalGrpcRequest) Reset()         { *m = ImageLocalGrpcRequest{} }
func (m *ImageLocalGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*ImageLocalGrpcRequest) ProtoMessage()    {}
func (*ImageLocalGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{0}
}

func (m *ImageLocalGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageLocalGrpcRequest.Unmarshal(m, b)
}
func (m *ImageLocalGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageLocalGrpcRequest.Marshal(b, m, deterministic)
}
func (m *ImageLocalGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageLocalGrpcRequest.Merge(m, src)
}
func (m *ImageLocalGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_ImageLocalGrpcRequest.Size(m)
}
func (m *ImageLocalGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageLocalGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageLocalGrpcRequest proto.InternalMessageInfo

func (m *ImageLocalGrpcRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ImageUploadGrpcRequest struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageUploadGrpcRequest) Reset()         { *m = ImageUploadGrpcRequest{} }
func (m *ImageUploadGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*ImageUploadGrpcRequest) ProtoMessage()    {}
func (*ImageUploadGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{1}
}

func (m *ImageUploadGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageUploadGrpcRequest.Unmarshal(m, b)
}
func (m *ImageUploadGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageUploadGrpcRequest.Marshal(b, m, deterministic)
}
func (m *ImageUploadGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageUploadGrpcRequest.Merge(m, src)
}
func (m *ImageUploadGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_ImageUploadGrpcRequest.Size(m)
}
func (m *ImageUploadGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageUploadGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageUploadGrpcRequest proto.InternalMessageInfo

func (m *ImageUploadGrpcRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type ImageLocalAsyncGrpcRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageLocalAsyncGrpcRequest) Reset()         { *m = ImageLocalAsyncGrpcRequest{} }
func (m *ImageLocalAsyncGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*ImageLocalAsyncGrpcRequest) ProtoMessage()    {}
func (*ImageLocalAsyncGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{2}
}

func (m *ImageLocalAsyncGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest.Unmarshal(m, b)
}
func (m *ImageLocalAsyncGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest.Marshal(b, m, deterministic)
}
func (m *ImageLocalAsyncGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageLocalAsyncGrpcRequest.Merge(m, src)
}
func (m *ImageLocalAsyncGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_ImageLocalAsyncGrpcRequest.Size(m)
}
func (m *ImageLocalAsyncGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageLocalAsyncGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageLocalAsyncGrpcRequest proto.InternalMessageInfo

func (m *ImageLocalAsyncGrpcRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ImageLocalAsyncGrpcRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageLocalAsyncGrpcRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageUploadAsyncGrpcRequest struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	RequestId            string   `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageUploadAsyncGrpcRequest) Reset()         { *m = ImageUploadAsyncGrpcRequest{} }
func (m *ImageUploadAsyncGrpcRequest) String() string { return proto.CompactTextString(m) }
func (*ImageUploadAsyncGrpcRequest) ProtoMessage()    {}
func (*ImageUploadAsyncGrpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{3}
}

func (m *ImageUploadAsyncGrpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest.Unmarshal(m, b)
}
func (m *ImageUploadAsyncGrpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest.Marshal(b, m, deterministic)
}
func (m *ImageUploadAsyncGrpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageUploadAsyncGrpcRequest.Merge(m, src)
}
func (m *ImageUploadAsyncGrpcRequest) XXX_Size() int {
	return xxx_messageInfo_ImageUploadAsyncGrpcRequest.Size(m)
}
func (m *ImageUploadAsyncGrpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageUploadAsyncGrpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageUploadAsyncGrpcRequest proto.InternalMessageInfo

func (m *ImageUploadAsyncGrpcRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *ImageUploadAsyncGrpcRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageUploadAsyncGrpcRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageRequestIdGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageRequestIdGrpcReply) Reset()         { *m = ImageRequestIdGrpcReply{} }
func (m *ImageRequestIdGrpcReply) String() string { return proto.CompactTextString(m) }
func (*ImageRequestIdGrpcReply) ProtoMessage()    {}
func (*ImageRequestIdGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{4}
}

func (m *ImageRequestIdGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageRequestIdGrpcReply.Unmarshal(m, b)
}
func (m *ImageRequestIdGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageRequestIdGrpcReply.Marshal(b, m, deterministic)
}
func (m *ImageRequestIdGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageRequestIdGrpcReply.Merge(m, src)
}
func (m *ImageRequestIdGrpcReply) XXX_Size() int {
	return xxx_messageInfo_ImageRequestIdGrpcReply.Size(m)
}
func (m *ImageRequestIdGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageRequestIdGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImageRequestIdGrpcReply proto.InternalMessageInfo

func (m *ImageRequestIdGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageRequestIdGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageRequestIdGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type ImageFilterGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Unsafe               float32  `protobuf:"fixed32,4,opt,name=unsafe,proto3" json:"unsafe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageFilterGrpcReply) Reset()         { *m = ImageFilterGrpcReply{} }
func (m *ImageFilterGrpcReply) String() string { return proto.CompactTextString(m) }
func (*ImageFilterGrpcReply) ProtoMessage()    {}
func (*ImageFilterGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{5}
}

func (m *ImageFilterGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFilterGrpcReply.Unmarshal(m, b)
}
func (m *ImageFilterGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFilterGrpcReply.Marshal(b, m, deterministic)
}
func (m *ImageFilterGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFilterGrpcReply.Merge(m, src)
}
func (m *ImageFilterGrpcReply) XXX_Size() int {
	return xxx_messageInfo_ImageFilterGrpcReply.Size(m)
}
func (m *ImageFilterGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFilterGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFilterGrpcReply proto.InternalMessageInfo

func (m *ImageFilterGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageFilterGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageFilterGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageFilterGrpcReply) GetUnsafe() float32 {
	if m != nil {
		return m.Unsafe
	}
	return 0
}

type ImageClassifyGrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Porn                 float32  `protobuf:"fixed32,4,opt,name=porn,proto3" json:"porn,omitempty"`
	Bloody               float32  `protobuf:"fixed32,5,opt,name=bloody,proto3" json:"bloody,omitempty"`
	Hentai               float32  `protobuf:"fixed32,6,opt,name=hentai,proto3" json:"hentai,omitempty"`
	Lure                 float32  `protobuf:"fixed32,7,opt,name=lure,proto3" json:"lure,omitempty"`
	Sexy                 float32  `protobuf:"fixed32,8,opt,name=sexy,proto3" json:"sexy,omitempty"`
	Normal               float32  `protobuf:"fixed32,9,opt,name=normal,proto3" json:"normal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageClassifyGrpcReply) Reset()         { *m = ImageClassifyGrpcReply{} }
func (m *ImageClassifyGrpcReply) String() string { return proto.CompactTextString(m) }
func (*ImageClassifyGrpcReply) ProtoMessage()    {}
func (*ImageClassifyGrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c8622463df4c9f8, []int{6}
}

func (m *ImageClassifyGrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageClassifyGrpcReply.Unmarshal(m, b)
}
func (m *ImageClassifyGrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageClassifyGrpcReply.Marshal(b, m, deterministic)
}
func (m *ImageClassifyGrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageClassifyGrpcReply.Merge(m, src)
}
func (m *ImageClassifyGrpcReply) XXX_Size() int {
	return xxx_messageInfo_ImageClassifyGrpcReply.Size(m)
}
func (m *ImageClassifyGrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageClassifyGrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_ImageClassifyGrpcReply proto.InternalMessageInfo

func (m *ImageClassifyGrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ImageClassifyGrpcReply) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ImageClassifyGrpcReply) GetPorn() float32 {
	if m != nil {
		return m.Porn
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetBloody() float32 {
	if m != nil {
		return m.Bloody
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetHentai() float32 {
	if m != nil {
		return m.Hentai
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetLure() float32 {
	if m != nil {
		return m.Lure
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetSexy() float32 {
	if m != nil {
		return m.Sexy
	}
	return 0
}

func (m *ImageClassifyGrpcReply) GetNormal() float32 {
	if m != nil {
		return m.Normal
	}
	return 0
}

func init() {
	proto.RegisterType((*ImageLocalGrpcRequest)(nil), "imageFilter.ImageLocalGrpcRequest")
	proto.RegisterType((*ImageUploadGrpcRequest)(nil), "imageFilter.ImageUploadGrpcRequest")
	proto.RegisterType((*ImageLocalAsyncGrpcRequest)(nil), "imageFilter.ImageLocalAsyncGrpcRequest")
	proto.RegisterType((*ImageUploadAsyncGrpcRequest)(nil), "imageFilter.ImageUploadAsyncGrpcRequest")
	proto.RegisterType((*ImageRequestIdGrpcReply)(nil), "imageFilter.ImageRequestIdGrpcReply")
	proto.RegisterType((*ImageFilterGrpcReply)(nil), "imageFilter.ImageFilterGrpcReply")
	proto.RegisterType((*ImageClassifyGrpcReply)(nil), "imageFilter.ImageClassifyGrpcReply")
}

func init() {
	proto.RegisterFile("imageFilter.proto", fileDescriptor_7c8622463df4c9f8)
}

var fileDescriptor_7c8622463df4c9f8 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdf, 0x4e, 0xfa, 0x30,
	0x18, 0xcd, 0x18, 0x7f, 0x7e, 0xf4, 0x67, 0x22, 0x54, 0xc5, 0x06, 0xbd, 0xc0, 0x69, 0x22, 0x89,
	0x86, 0x0b, 0x7d, 0x02, 0x35, 0x91, 0x90, 0x78, 0xb5, 0xe0, 0x85, 0xf1, 0xc6, 0xb2, 0x75, 0xb0,
	0xa4, 0xac, 0xb3, 0xdd, 0x12, 0xe6, 0xab, 0xf8, 0x06, 0x3e, 0x99, 0x8f, 0x61, 0xda, 0x8e, 0x6c,
	0x6c, 0x10, 0xff, 0x24, 0xdc, 0x7d, 0xdf, 0xe9, 0xe9, 0x39, 0x1f, 0x7c, 0x3d, 0x03, 0x6d, 0x7f,
	0x8e, 0xa7, 0xe4, 0xde, 0xa7, 0x11, 0xe1, 0x83, 0x90, 0xb3, 0x88, 0xc1, 0xff, 0x39, 0xc8, 0xba,
	0x00, 0x07, 0x23, 0xd9, 0x3e, 0x30, 0x07, 0xd3, 0x21, 0x0f, 0x1d, 0x9b, 0xbc, 0xc6, 0x44, 0x44,
	0x10, 0x82, 0x6a, 0x88, 0xa3, 0x19, 0x32, 0x7a, 0x46, 0xbf, 0x69, 0xab, 0xda, 0xba, 0x04, 0x1d,
	0x45, 0x7e, 0x0c, 0x29, 0xc3, 0x6e, 0x81, 0xed, 0xf9, 0x94, 0x28, 0xf6, 0x8e, 0xad, 0x6a, 0xeb,
	0x05, 0x74, 0x33, 0xe9, 0x1b, 0x91, 0x04, 0xce, 0x37, 0xfa, 0xf0, 0x18, 0x34, 0xb9, 0x3e, 0x1e,
	0xb9, 0xa8, 0xa2, 0x0e, 0x32, 0x00, 0xb6, 0x80, 0x19, 0x73, 0x8a, 0x4c, 0x85, 0xcb, 0xd2, 0xc2,
	0xe0, 0x28, 0x37, 0xcf, 0x3a, 0x8b, 0xe2, 0x50, 0xbf, 0xb6, 0x20, 0xe0, 0x50, 0x59, 0xd8, 0x4b,
	0x8e, 0x36, 0x08, 0x69, 0x22, 0xe5, 0x1d, 0xe6, 0x6a, 0xf9, 0x9a, 0xad, 0x6a, 0x88, 0x40, 0x63,
	0x4e, 0x84, 0xc0, 0x53, 0x92, 0x8a, 0x2f, 0xdb, 0x55, 0x63, 0xb3, 0x60, 0x6c, 0xbd, 0x81, 0xfd,
	0x51, 0xb6, 0x95, 0xad, 0x78, 0xc0, 0x0e, 0xa8, 0xc7, 0x81, 0xc0, 0x1e, 0x41, 0xd5, 0x9e, 0xd1,
	0xaf, 0xd8, 0x69, 0x67, 0x7d, 0x1a, 0xe9, 0x5a, 0xef, 0x28, 0x16, 0xc2, 0xf7, 0x92, 0xed, 0xd8,
	0xcb, 0x85, 0x33, 0x1e, 0xa4, 0xe6, 0xaa, 0x96, 0x23, 0x4d, 0x28, 0x63, 0x6e, 0x82, 0x6a, 0x7a,
	0x24, 0xdd, 0x49, 0x7c, 0x46, 0x82, 0x08, 0xfb, 0xa8, 0xae, 0x71, 0xdd, 0x49, 0x0d, 0x1a, 0x73,
	0x82, 0x1a, 0x5a, 0x43, 0xd6, 0x12, 0x13, 0x64, 0x91, 0xa0, 0x7f, 0x1a, 0x93, 0xb5, 0xbc, 0x1f,
	0x30, 0x3e, 0xc7, 0x14, 0x35, 0xf5, 0x7d, 0xdd, 0x5d, 0xbd, 0x9b, 0x60, 0xb7, 0xf0, 0x3f, 0xc3,
	0x27, 0xd0, 0xca, 0x9e, 0xa9, 0xc6, 0xa1, 0x35, 0xc8, 0xc7, 0x66, 0x6d, 0x40, 0xba, 0x27, 0x65,
	0x4e, 0x71, 0x7b, 0xcf, 0xa0, 0x9d, 0x7b, 0x9f, 0xa9, 0xf6, 0x69, 0xf9, 0x5e, 0x29, 0x4f, 0x3f,
	0x11, 0xf7, 0xf2, 0xc9, 0xd5, 0x87, 0x2a, 0x01, 0xf0, 0x7c, 0xc3, 0xf0, 0xc5, 0x7c, 0x74, 0xcf,
	0xca, 0xc4, 0x35, 0xcf, 0x7c, 0xb6, 0x12, 0xfa, 0xbc, 0x51, 0x7f, 0xd3, 0x2f, 0xf9, 0x9b, 0xd3,
	0x6d, 0xe7, 0xa3, 0xb2, 0x37, 0x66, 0x8c, 0x0e, 0x19, 0x73, 0x07, 0x63, 0xb2, 0x88, 0x34, 0x7f,
	0x52, 0x57, 0xdf, 0xad, 0xeb, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0x14, 0x3b, 0xef, 0xcc,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImageFilterGrpcClient is the client API for ImageFilterGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImageFilterGrpcClient interface {
	ImageLocalFilter(ctx context.Context, in *ImageLocalGrpcRequest, opts ...grpc.CallOption) (*ImageFilterGrpcReply, error)
	ImageUploadFilter(ctx context.Context, in *ImageUploadGrpcRequest, opts ...grpc.CallOption) (*ImageFilterGrpcReply, error)
	ImageLocalFilterAsync(ctx context.Context, in *ImageLocalAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply, error)
	ImageUploadFilterAsync(ctx context.Context, in *ImageUploadAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply, error)
}

type imageFilterGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewImageFilterGrpcClient(cc grpc.ClientConnInterface) ImageFilterGrpcClient {
	return &imageFilterGrpcClient{cc}
}

func (c *imageFilterGrpcClient) ImageLocalFilter(ctx context.Context, in *ImageLocalGrpcRequest, opts ...grpc.CallOption) (*ImageFilterGrpcReply, error) {
	out := new(ImageFilterGrpcReply)
	err := c.cc.Invoke(ctx, "/imageFilter.ImageFilterGrpc/ImageLocalFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageFilterGrpcClient) ImageUploadFilter(ctx context.Context, in *ImageUploadGrpcRequest, opts ...grpc.CallOption) (*ImageFilterGrpcReply, error) {
	out := new(ImageFilterGrpcReply)
	err := c.cc.Invoke(ctx, "/imageFilter.ImageFilterGrpc/ImageUploadFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageFilterGrpcClient) ImageLocalFilterAsync(ctx context.Context, in *ImageLocalAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply, error) {
	out := new(ImageRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/imageFilter.ImageFilterGrpc/ImageLocalFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *imageFilterGrpcClient) ImageUploadFilterAsync(ctx context.Context, in *ImageUploadAsyncGrpcRequest, opts ...grpc.CallOption) (*ImageRequestIdGrpcReply, error) {
	out := new(ImageRequestIdGrpcReply)
	err := c.cc.Invoke(ctx, "/imageFilter.ImageFilterGrpc/ImageUploadFilterAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImageFilterGrpcServer is the server API for ImageFilterGrpc service.
type ImageFilterGrpcServer interface {
	ImageLocalFilter(context.Context, *ImageLocalGrpcRequest) (*ImageFilterGrpcReply, error)
	ImageUploadFilter(context.Context, *ImageUploadGrpcRequest) (*ImageFilterGrpcReply, error)
	ImageLocalFilterAsync(context.Context, *ImageLocalAsyncGrpcRequest) (*ImageRequestIdGrpcReply, error)
	ImageUploadFilterAsync(context.Context, *ImageUploadAsyncGrpcRequest) (*ImageRequestIdGrpcReply, error)
}

// UnimplementedImageFilterGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedImageFilterGrpcServer struct {
}

func (*UnimplementedImageFilterGrpcServer) ImageLocalFilter(ctx context.Context, req *ImageLocalGrpcRequest) (*ImageFilterGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageLocalFilter not implemented")
}
func (*UnimplementedImageFilterGrpcServer) ImageUploadFilter(ctx context.Context, req *ImageUploadGrpcRequest) (*ImageFilterGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageUploadFilter not implemented")
}
func (*UnimplementedImageFilterGrpcServer) ImageLocalFilterAsync(ctx context.Context, req *ImageLocalAsyncGrpcRequest) (*ImageRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageLocalFilterAsync not implemented")
}
func (*UnimplementedImageFilterGrpcServer) ImageUploadFilterAsync(ctx context.Context, req *ImageUploadAsyncGrpcRequest) (*ImageRequestIdGrpcReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImageUploadFilterAsync not implemented")
}

func RegisterImageFilterGrpcServer(s *grpc.Server, srv ImageFilterGrpcServer) {
	s.RegisterService(&_ImageFilterGrpc_serviceDesc, srv)
}

func _ImageFilterGrpc_ImageLocalFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageLocalGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageFilterGrpcServer).ImageLocalFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imageFilter.ImageFilterGrpc/ImageLocalFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageFilterGrpcServer).ImageLocalFilter(ctx, req.(*ImageLocalGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageFilterGrpc_ImageUploadFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUploadGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageFilterGrpcServer).ImageUploadFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imageFilter.ImageFilterGrpc/ImageUploadFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageFilterGrpcServer).ImageUploadFilter(ctx, req.(*ImageUploadGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageFilterGrpc_ImageLocalFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageLocalAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageFilterGrpcServer).ImageLocalFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imageFilter.ImageFilterGrpc/ImageLocalFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageFilterGrpcServer).ImageLocalFilterAsync(ctx, req.(*ImageLocalAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImageFilterGrpc_ImageUploadFilterAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageUploadAsyncGrpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImageFilterGrpcServer).ImageUploadFilterAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imageFilter.ImageFilterGrpc/ImageUploadFilterAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImageFilterGrpcServer).ImageUploadFilterAsync(ctx, req.(*ImageUploadAsyncGrpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImageFilterGrpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imageFilter.ImageFilterGrpc",
	HandlerType: (*ImageFilterGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImageLocalFilter",
			Handler:    _ImageFilterGrpc_ImageLocalFilter_Handler,
		},
		{
			MethodName: "ImageUploadFilter",
			Handler:    _ImageFilterGrpc_ImageUploadFilter_Handler,
		},
		{
			MethodName: "ImageLocalFilterAsync",
			Handler:    _ImageFilterGrpc_ImageLocalFilterAsync_Handler,
		},
		{
			MethodName: "ImageUploadFilterAsync",
			Handler:    _ImageFilterGrpc_ImageUploadFilterAsync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "imageFilter.proto",
}
